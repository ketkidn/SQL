
select * from customers
select * from orders
select * from orderdetails

--1. Retrieve the top 3 customers who have spent the highest total amount across all their orders.
select top 3 c.customerid,name,sum(totalamount) from customers c inner join orders o on c.customerid=o.customerid
GROUP BY c.CustomerID, c.Name
order by sum(totalamount) desc

--2. Find the customer who has placed the most number of orders.
select top 1 c.customerid,name,count(orderid) from customers c inner join orders o on c.customerid=o.customerid
GROUP BY c.CustomerID, c.Name
order by count(orderid) desc

--3.Get the average order amount for each city, displaying only cities where the average order amount is greater than 300.
select city,avg(totalamount) from customers c inner join orders o on c.customerid=o.customerid
GROUP BY city
having avg(totalamount)>300

--4.List all customers who have never placed an order.
select * from customers where customerid not in (select customerid from orders)

SELECT c.* FROM Customers c LEFT JOIN Orders o ON c.CustomerID = o.CustomerID WHERE o.CustomerID IS NULL;

--5.Show the products that have been ordered more than once along with their total quantity ordered.
select od.productname,sum(od.orderid) from orders o left join orderdetails od on o.orderid=od.orderid
group by od.productname
having sum(od.orderid) >1

--6.Retrieve all orders placed in the last 7 days along with customer names.
select c.customerid,c.name, od.orderid,od.productname,od.quantity,od.price
from customers c 
left join orders o on c.customerid=o.customerid
left join orderdetails od on o.orderid=od.orderid
where o.orderdate between DATEADD(DAY, -7, GETDATE()) AND GETDATE();--getdate()-7 and getdate()

--7.Find the total revenue generated by each product.
SELECT od.ProductName, SUM(od.Quantity * od.Price) AS TotalRevenue FROM OrderDetails od GROUP BY od.ProductName;

--8.Display customers who have ordered at least 3 different products.
select c.customerid,c.name, COUNT(DISTINCT od.ProductName) AS DistinctProductsOrdered
from customers c 
left join orders o on c.customerid=o.customerid
left join orderdetails od on o.orderid=od.orderid
group by c.CustomerID, c.Name
HAVING COUNT(DISTINCT od.ProductName) >= 3;

--9.Find the highest, lowest, and average order amount for each customer.
select c.customerid,c.name,max(totalamount),min(totalamount),avg(totalamount)
from customers c 
left join orders o on c.customerid=o.customerid
group by c.customerid,c.name

--10.Show the percentage contribution of each customer's total spend to the overall revenu
SELECT 
    o.CustomerID, 
    SUM(o.TotalAmount) AS CustomerTotalSpend, 
    (SUM(o.TotalAmount) * 100.0) / (SELECT SUM(TotalAmount) FROM Orders) AS PercentageContribution
FROM Orders o
GROUP BY o.CustomerID;